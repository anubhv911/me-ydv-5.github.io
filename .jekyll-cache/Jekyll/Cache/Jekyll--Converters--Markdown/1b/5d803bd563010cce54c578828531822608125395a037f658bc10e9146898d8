I"°<p>Week 1 included setting up all the work environment, <a href="https://bitbucket.org/me_ydv_5/octave">bitbucket repository</a> for tracking my projectâ€™s progess and review,setting up and getting this blog aggregated to planet.octave.org. It also included reading up various files that are of concern to the project.</p>

<p>Week 2 would focus on getting my hands dirty in refactoring the <a href="https://github.com/octave-de/OctConf2017/blob/master/demo2/__publish_wiki_output__.m">__publish_wiki_output__.m</a> and (possibly) <a href="https://hg.savannah.gnu.org/hgweb/octave/file/74fbe0d91994/scripts/miscellaneous/publish.m">publish.m</a> code. This would also include looking up what exact methods/functions will be needed to implement the wrapper. Currently, a proof of concept is written as a <a href="https://github.com/octave-de/OctConf2017/blob/master/demo2/wikiLogin.sh">bash script</a>. My work of writing the wrapper will be highly inspired from this script.</p>

<p>The wrapper is written so that MediaWiki can be communicated directly using Octave and there wonâ€™t be any need to use Javaâ€™s interface to Octave or the bash script itself. To know how exactly MediaWiki API works, have a look at this nicely written <a href="https://siko1056.github.io/blog/2017/03/10/getting-to-know-the-mediawiki-api.html">post</a>. Note that the $wgEnableAPI written in the post is now deprecated from MediaWikiâ€™s version 1.32.0. Another thing that needs looking upon is MediaWiki needs a <a href="https://www.mediawiki.org/wiki/API:Main_page#Identifying_your_client">user agent</a> in order for the client to be identified. So we need to decide what would be it.</p>

<p>Stay tuned for next update!</p>
:ET